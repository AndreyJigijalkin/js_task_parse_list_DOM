{"version":3,"sources":["scripts/main.js"],"names":["sortList","list","sort","prev","next","getNumber","dataset","salary","str","replace","getEmployees","map","employee","name","innerText","employeesList","document","querySelectorAll","forEach","querySelector","append"],"mappings":";AAAA,aAwBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAtBA,SAASA,EAASC,GACTA,OAAAA,EAAKC,KAAK,SAACC,EAAMC,GACtBC,OAAAA,EAAUD,EAAKE,QAAQC,QAAUF,EAAUF,EAAKG,QAAQC,UAG5D,SAASF,EAAUG,GACV,OAACA,EAAIC,QAAQ,MAAO,IAG7B,SAASC,EAAaT,GACbA,OAAAA,EAAKU,IAAI,SAAAC,GAAQ,OAAA,EAAA,CAEpBC,KAAMD,EAASE,WACZF,EAASN,WAKlB,IAAMS,EAAoBC,EAAAA,SAASC,iBAAiB,OAEpDP,EAAaV,EAASe,IAEtBA,EAAcG,QAAQ,SAAAN,GACpBI,SAASG,cAAc,MAAMC,OAAOR","file":"main.1c7a7fbb.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction sortList(list) {\n  return list.sort((prev, next) => (\n    getNumber(next.dataset.salary) - getNumber(prev.dataset.salary)));\n}\n\nfunction getNumber(str) {\n  return +str.replace(/\\D/g, '');\n}\n\nfunction getEmployees(list) {\n  return list.map(employee => (\n    {\n      name: employee.innerText,\n      ...employee.dataset,\n    }\n  ));\n}\n\nconst employeesList = [...document.querySelectorAll('li')];\n\ngetEmployees(sortList(employeesList));\n\nemployeesList.forEach(employee => {\n  document.querySelector('ul').append(employee);\n});\n"]}